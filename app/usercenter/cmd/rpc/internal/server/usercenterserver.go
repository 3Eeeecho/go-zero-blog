// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: usercenter.proto

package server

import (
	"context"

	"github.com/3Eeeecho/go-zero-blog/app/usercenter/cmd/rpc/internal/logic"
	"github.com/3Eeeecho/go-zero-blog/app/usercenter/cmd/rpc/internal/svc"
	"github.com/3Eeeecho/go-zero-blog/app/usercenter/cmd/rpc/userpb"
)

type UsercenterServer struct {
	svcCtx *svc.ServiceContext
	userpb.UnimplementedUsercenterServer
}

func NewUsercenterServer(svcCtx *svc.ServiceContext) *UsercenterServer {
	return &UsercenterServer{
		svcCtx: svcCtx,
	}
}

// 用户登录
func (s *UsercenterServer) Login(ctx context.Context, in *userpb.LoginRequest) (*userpb.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 用户注册
func (s *UsercenterServer) Register(ctx context.Context, in *userpb.RegisterRequest) (*userpb.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 修改用户名
func (s *UsercenterServer) UpdateUsername(ctx context.Context, in *userpb.UpdateUsernameRequest) (*userpb.UpdateUsernameResponse, error) {
	l := logic.NewUpdateUsernameLogic(ctx, s.svcCtx)
	return l.UpdateUsername(in)
}

// 修改密码
func (s *UsercenterServer) UpdatePassword(ctx context.Context, in *userpb.UpdatePasswordRequest) (*userpb.UpdatePasswordResponse, error) {
	l := logic.NewUpdatePasswordLogic(ctx, s.svcCtx)
	return l.UpdatePassword(in)
}

// 生成 token
func (s *UsercenterServer) GenerateToken(ctx context.Context, in *userpb.GenerateTokenReq) (*userpb.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

func (s *UsercenterServer) UpdateUserRole(ctx context.Context, in *userpb.UpdateUserRoleRequest) (*userpb.UpdateUserRoleResponse, error) {
	l := logic.NewUpdateUserRoleLogic(ctx, s.svcCtx)
	return l.UpdateUserRole(in)
}

func (s *UsercenterServer) GetUserRole(ctx context.Context, in *userpb.GetUserRoleRequest) (*userpb.GetUserRoleResponse, error) {
	l := logic.NewGetUserRoleLogic(ctx, s.svcCtx)
	return l.GetUserRole(in)
}
