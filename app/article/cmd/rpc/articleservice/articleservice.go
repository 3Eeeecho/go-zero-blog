// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: article.proto

package articleservice

import (
	"context"

	"github.com/3Eeeecho/go-zero-blog/app/article/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddArticleRequest     = pb.AddArticleRequest
	Article               = pb.Article
	ArticleCommonResponse = pb.ArticleCommonResponse
	DeleteArticleRequest  = pb.DeleteArticleRequest
	EditArticleRequest    = pb.EditArticleRequest
	GetArticleRequest     = pb.GetArticleRequest
	GetArticleResponse    = pb.GetArticleResponse
	GetArticlesRequest    = pb.GetArticlesRequest
	GetArticlesResponse   = pb.GetArticlesResponse

	ArticleService interface {
		// 获取单篇文章的详细信息
		GetArticle(ctx context.Context, in *GetArticleRequest, opts ...grpc.CallOption) (*GetArticleResponse, error)
		// 获取文章列表
		GetArticles(ctx context.Context, in *GetArticlesRequest, opts ...grpc.CallOption) (*GetArticlesResponse, error)
		// 新增一篇文章
		AddArticle(ctx context.Context, in *AddArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error)
		// 修改文章
		EditArticle(ctx context.Context, in *EditArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error)
		// 删除文章
		DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error)
	}

	defaultArticleService struct {
		cli zrpc.Client
	}
)

func NewArticleService(cli zrpc.Client) ArticleService {
	return &defaultArticleService{
		cli: cli,
	}
}

// 获取单篇文章的详细信息
func (m *defaultArticleService) GetArticle(ctx context.Context, in *GetArticleRequest, opts ...grpc.CallOption) (*GetArticleResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.GetArticle(ctx, in, opts...)
}

// 获取文章列表
func (m *defaultArticleService) GetArticles(ctx context.Context, in *GetArticlesRequest, opts ...grpc.CallOption) (*GetArticlesResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.GetArticles(ctx, in, opts...)
}

// 新增一篇文章
func (m *defaultArticleService) AddArticle(ctx context.Context, in *AddArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.AddArticle(ctx, in, opts...)
}

// 修改文章
func (m *defaultArticleService) EditArticle(ctx context.Context, in *EditArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.EditArticle(ctx, in, opts...)
}

// 删除文章
func (m *defaultArticleService) DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.DeleteArticle(ctx, in, opts...)
}
