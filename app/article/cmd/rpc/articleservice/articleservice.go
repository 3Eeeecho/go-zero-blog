// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: article.proto

package articleservice

import (
	"context"

	"github.com/3Eeeecho/go-zero-blog/app/article/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddArticleRequest          = pb.AddArticleRequest
	AddCommentRequest          = pb.AddCommentRequest
	AddCommentResponse         = pb.AddCommentResponse
	Article                    = pb.Article
	ArticleCommonResponse      = pb.ArticleCommonResponse
	Comment                    = pb.Comment
	DeleteArticleRequest       = pb.DeleteArticleRequest
	EditArticleRequest         = pb.EditArticleRequest
	GetArticleRequest          = pb.GetArticleRequest
	GetArticleResponse         = pb.GetArticleResponse
	GetArticlesRequest         = pb.GetArticlesRequest
	GetArticlesResponse        = pb.GetArticlesResponse
	GetCommentsRequest         = pb.GetCommentsRequest
	GetCommentsResponse        = pb.GetCommentsResponse
	GetPendingArticlesRequest  = pb.GetPendingArticlesRequest
	GetPendingArticlesResponse = pb.GetPendingArticlesResponse
	LikeArticleRequest         = pb.LikeArticleRequest
	ReviewArticleRequest       = pb.ReviewArticleRequest
	ReviewArticleResponse      = pb.ReviewArticleResponse
	SubmitArticleRequest       = pb.SubmitArticleRequest
	SubmitArticleResponse      = pb.SubmitArticleResponse
	UnlikeArticleRequest       = pb.UnlikeArticleRequest
	ViewArticleRequest         = pb.ViewArticleRequest
	ViewArticleResponse        = pb.ViewArticleResponse

	ArticleService interface {
		// 获取单篇文章的详细信息
		GetArticle(ctx context.Context, in *GetArticleRequest, opts ...grpc.CallOption) (*GetArticleResponse, error)
		// 获取文章列表
		GetArticles(ctx context.Context, in *GetArticlesRequest, opts ...grpc.CallOption) (*GetArticlesResponse, error)
		// 新增一篇文章
		AddArticle(ctx context.Context, in *AddArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error)
		// 修改文章
		EditArticle(ctx context.Context, in *EditArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error)
		// 删除文章
		DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error)
		GetPendingArticles(ctx context.Context, in *GetPendingArticlesRequest, opts ...grpc.CallOption) (*GetPendingArticlesResponse, error)
		SubmitArticle(ctx context.Context, in *SubmitArticleRequest, opts ...grpc.CallOption) (*SubmitArticleResponse, error)
		ReviewArticle(ctx context.Context, in *ReviewArticleRequest, opts ...grpc.CallOption) (*ReviewArticleResponse, error)
		// 添加评论
		AddComment(ctx context.Context, in *AddCommentRequest, opts ...grpc.CallOption) (*AddCommentResponse, error)
		// 获取评论列表
		GetComments(ctx context.Context, in *GetCommentsRequest, opts ...grpc.CallOption) (*GetCommentsResponse, error)
		ViewArticle(ctx context.Context, in *ViewArticleRequest, opts ...grpc.CallOption) (*ViewArticleResponse, error)
		LikeArticle(ctx context.Context, in *LikeArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error)
		UnlikeArtilce(ctx context.Context, in *UnlikeArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error)
	}

	defaultArticleService struct {
		cli zrpc.Client
	}
)

func NewArticleService(cli zrpc.Client) ArticleService {
	return &defaultArticleService{
		cli: cli,
	}
}

// 获取单篇文章的详细信息
func (m *defaultArticleService) GetArticle(ctx context.Context, in *GetArticleRequest, opts ...grpc.CallOption) (*GetArticleResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.GetArticle(ctx, in, opts...)
}

// 获取文章列表
func (m *defaultArticleService) GetArticles(ctx context.Context, in *GetArticlesRequest, opts ...grpc.CallOption) (*GetArticlesResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.GetArticles(ctx, in, opts...)
}

// 新增一篇文章
func (m *defaultArticleService) AddArticle(ctx context.Context, in *AddArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.AddArticle(ctx, in, opts...)
}

// 修改文章
func (m *defaultArticleService) EditArticle(ctx context.Context, in *EditArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.EditArticle(ctx, in, opts...)
}

// 删除文章
func (m *defaultArticleService) DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.DeleteArticle(ctx, in, opts...)
}

func (m *defaultArticleService) GetPendingArticles(ctx context.Context, in *GetPendingArticlesRequest, opts ...grpc.CallOption) (*GetPendingArticlesResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.GetPendingArticles(ctx, in, opts...)
}

func (m *defaultArticleService) SubmitArticle(ctx context.Context, in *SubmitArticleRequest, opts ...grpc.CallOption) (*SubmitArticleResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.SubmitArticle(ctx, in, opts...)
}

func (m *defaultArticleService) ReviewArticle(ctx context.Context, in *ReviewArticleRequest, opts ...grpc.CallOption) (*ReviewArticleResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.ReviewArticle(ctx, in, opts...)
}

// 添加评论
func (m *defaultArticleService) AddComment(ctx context.Context, in *AddCommentRequest, opts ...grpc.CallOption) (*AddCommentResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

// 获取评论列表
func (m *defaultArticleService) GetComments(ctx context.Context, in *GetCommentsRequest, opts ...grpc.CallOption) (*GetCommentsResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.GetComments(ctx, in, opts...)
}

func (m *defaultArticleService) ViewArticle(ctx context.Context, in *ViewArticleRequest, opts ...grpc.CallOption) (*ViewArticleResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.ViewArticle(ctx, in, opts...)
}

func (m *defaultArticleService) LikeArticle(ctx context.Context, in *LikeArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.LikeArticle(ctx, in, opts...)
}

func (m *defaultArticleService) UnlikeArtilce(ctx context.Context, in *UnlikeArticleRequest, opts ...grpc.CallOption) (*ArticleCommonResponse, error) {
	client := pb.NewArticleServiceClient(m.cli.Conn())
	return client.UnlikeArtilce(ctx, in, opts...)
}
