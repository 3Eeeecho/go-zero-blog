// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: article.proto

package server

import (
	"context"

	"github.com/3Eeeecho/go-zero-blog/app/article/cmd/rpc/internal/logic"
	"github.com/3Eeeecho/go-zero-blog/app/article/cmd/rpc/internal/svc"
	"github.com/3Eeeecho/go-zero-blog/app/article/cmd/rpc/pb"
)

type ArticleServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedArticleServiceServer
}

func NewArticleServiceServer(svcCtx *svc.ServiceContext) *ArticleServiceServer {
	return &ArticleServiceServer{
		svcCtx: svcCtx,
	}
}

// 获取单篇文章的详细信息
func (s *ArticleServiceServer) GetArticle(ctx context.Context, in *pb.GetArticleRequest) (*pb.GetArticleResponse, error) {
	l := logic.NewGetArticleLogic(ctx, s.svcCtx)
	return l.GetArticle(in)
}

// 获取文章列表
func (s *ArticleServiceServer) GetArticles(ctx context.Context, in *pb.GetArticlesRequest) (*pb.GetArticlesResponse, error) {
	l := logic.NewGetArticlesLogic(ctx, s.svcCtx)
	return l.GetArticles(in)
}

// 新增一篇文章
func (s *ArticleServiceServer) AddArticle(ctx context.Context, in *pb.AddArticleRequest) (*pb.ArticleCommonResponse, error) {
	l := logic.NewAddArticleLogic(ctx, s.svcCtx)
	return l.AddArticle(in)
}

// 修改文章
func (s *ArticleServiceServer) EditArticle(ctx context.Context, in *pb.EditArticleRequest) (*pb.ArticleCommonResponse, error) {
	l := logic.NewEditArticleLogic(ctx, s.svcCtx)
	return l.EditArticle(in)
}

// 删除文章
func (s *ArticleServiceServer) DeleteArticle(ctx context.Context, in *pb.DeleteArticleRequest) (*pb.ArticleCommonResponse, error) {
	l := logic.NewDeleteArticleLogic(ctx, s.svcCtx)
	return l.DeleteArticle(in)
}

func (s *ArticleServiceServer) GetPendingArticles(ctx context.Context, in *pb.GetPendingArticlesRequest) (*pb.GetPendingArticlesResponse, error) {
	l := logic.NewGetPendingArticlesLogic(ctx, s.svcCtx)
	return l.GetPendingArticles(in)
}

func (s *ArticleServiceServer) SubmitArticle(ctx context.Context, in *pb.SubmitArticleRequest) (*pb.SubmitArticleResponse, error) {
	l := logic.NewSubmitArticleLogic(ctx, s.svcCtx)
	return l.SubmitArticle(in)
}

func (s *ArticleServiceServer) ReviewArticle(ctx context.Context, in *pb.ReviewArticleRequest) (*pb.ReviewArticleResponse, error) {
	l := logic.NewReviewArticleLogic(ctx, s.svcCtx)
	return l.ReviewArticle(in)
}

// 添加评论
func (s *ArticleServiceServer) AddComment(ctx context.Context, in *pb.AddCommentRequest) (*pb.AddCommentResponse, error) {
	l := logic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

// 获取评论列表
func (s *ArticleServiceServer) GetComments(ctx context.Context, in *pb.GetCommentsRequest) (*pb.GetCommentsResponse, error) {
	l := logic.NewGetCommentsLogic(ctx, s.svcCtx)
	return l.GetComments(in)
}
