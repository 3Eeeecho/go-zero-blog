// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: tag.proto

package tagservice

import (
	"context"

	"github.com/3Eeeecho/go-zero-blog/app/tag/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddTagRequest     = pb.AddTagRequest
	DeleteTagRequest  = pb.DeleteTagRequest
	EditTagRequest    = pb.EditTagRequest
	ExportTagRequest  = pb.ExportTagRequest
	ExportTagResponse = pb.ExportTagResponse
	FoundTagRequest   = pb.FoundTagRequest
	FoundTagResponse  = pb.FoundTagResponse
	GetTagsRequest    = pb.GetTagsRequest
	GetTagsResponse   = pb.GetTagsResponse
	ImportTagRequest  = pb.ImportTagRequest
	ImportTagResponse = pb.ImportTagResponse
	Tag               = pb.Tag
	TagCommonResponse = pb.TagCommonResponse

	TagService interface {
		// 获取标签列表
		GetTags(ctx context.Context, in *GetTagsRequest, opts ...grpc.CallOption) (*GetTagsResponse, error)
		// 新增文章标签
		AddTag(ctx context.Context, in *AddTagRequest, opts ...grpc.CallOption) (*TagCommonResponse, error)
		// 修改文章标签
		EditTag(ctx context.Context, in *EditTagRequest, opts ...grpc.CallOption) (*TagCommonResponse, error)
		// 删除文章标签
		DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*TagCommonResponse, error)
		// 导出标签信息
		ExportTag(ctx context.Context, in *ExportTagRequest, opts ...grpc.CallOption) (*ExportTagResponse, error)
		// 导入标签信息
		ImportTag(ctx context.Context, in *ImportTagRequest, opts ...grpc.CallOption) (*ImportTagResponse, error)
		FoundTag(ctx context.Context, in *FoundTagRequest, opts ...grpc.CallOption) (*FoundTagResponse, error)
	}

	defaultTagService struct {
		cli zrpc.Client
	}
)

func NewTagService(cli zrpc.Client) TagService {
	return &defaultTagService{
		cli: cli,
	}
}

// 获取标签列表
func (m *defaultTagService) GetTags(ctx context.Context, in *GetTagsRequest, opts ...grpc.CallOption) (*GetTagsResponse, error) {
	client := pb.NewTagServiceClient(m.cli.Conn())
	return client.GetTags(ctx, in, opts...)
}

// 新增文章标签
func (m *defaultTagService) AddTag(ctx context.Context, in *AddTagRequest, opts ...grpc.CallOption) (*TagCommonResponse, error) {
	client := pb.NewTagServiceClient(m.cli.Conn())
	return client.AddTag(ctx, in, opts...)
}

// 修改文章标签
func (m *defaultTagService) EditTag(ctx context.Context, in *EditTagRequest, opts ...grpc.CallOption) (*TagCommonResponse, error) {
	client := pb.NewTagServiceClient(m.cli.Conn())
	return client.EditTag(ctx, in, opts...)
}

// 删除文章标签
func (m *defaultTagService) DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*TagCommonResponse, error) {
	client := pb.NewTagServiceClient(m.cli.Conn())
	return client.DeleteTag(ctx, in, opts...)
}

// 导出标签信息
func (m *defaultTagService) ExportTag(ctx context.Context, in *ExportTagRequest, opts ...grpc.CallOption) (*ExportTagResponse, error) {
	client := pb.NewTagServiceClient(m.cli.Conn())
	return client.ExportTag(ctx, in, opts...)
}

// 导入标签信息
func (m *defaultTagService) ImportTag(ctx context.Context, in *ImportTagRequest, opts ...grpc.CallOption) (*ImportTagResponse, error) {
	client := pb.NewTagServiceClient(m.cli.Conn())
	return client.ImportTag(ctx, in, opts...)
}

func (m *defaultTagService) FoundTag(ctx context.Context, in *FoundTagRequest, opts ...grpc.CallOption) (*FoundTagResponse, error) {
	client := pb.NewTagServiceClient(m.cli.Conn())
	return client.FoundTag(ctx, in, opts...)
}
