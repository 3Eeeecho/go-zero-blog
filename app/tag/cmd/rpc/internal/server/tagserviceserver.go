// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: tag.proto

package server

import (
	"context"

	"github.com/3Eeeecho/go-zero-blog/app/tag/cmd/rpc/internal/logic"
	"github.com/3Eeeecho/go-zero-blog/app/tag/cmd/rpc/internal/svc"
	"github.com/3Eeeecho/go-zero-blog/app/tag/cmd/rpc/pb"
)

type TagServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTagServiceServer
}

func NewTagServiceServer(svcCtx *svc.ServiceContext) *TagServiceServer {
	return &TagServiceServer{
		svcCtx: svcCtx,
	}
}

// 获取标签列表
func (s *TagServiceServer) GetTags(ctx context.Context, in *pb.GetTagsRequest) (*pb.GetTagsResponse, error) {
	l := logic.NewGetTagsLogic(ctx, s.svcCtx)
	return l.GetTags(in)
}

// 新增文章标签
func (s *TagServiceServer) AddTag(ctx context.Context, in *pb.AddTagRequest) (*pb.TagCommonResponse, error) {
	l := logic.NewAddTagLogic(ctx, s.svcCtx)
	return l.AddTag(in)
}

// 修改文章标签
func (s *TagServiceServer) EditTag(ctx context.Context, in *pb.EditTagRequest) (*pb.TagCommonResponse, error) {
	l := logic.NewEditTagLogic(ctx, s.svcCtx)
	return l.EditTag(in)
}

// 删除文章标签
func (s *TagServiceServer) DeleteTag(ctx context.Context, in *pb.DeleteTagRequest) (*pb.TagCommonResponse, error) {
	l := logic.NewDeleteTagLogic(ctx, s.svcCtx)
	return l.DeleteTag(in)
}

// 导出标签信息
func (s *TagServiceServer) ExportTag(ctx context.Context, in *pb.ExportTagRequest) (*pb.ExportTagResponse, error) {
	l := logic.NewExportTagLogic(ctx, s.svcCtx)
	return l.ExportTag(in)
}

// 导入标签信息
func (s *TagServiceServer) ImportTag(ctx context.Context, in *pb.ImportTagRequest) (*pb.ImportTagResponse, error) {
	l := logic.NewImportTagLogic(ctx, s.svcCtx)
	return l.ImportTag(in)
}

func (s *TagServiceServer) FoundTag(ctx context.Context, in *pb.FoundTagRequest) (*pb.FoundTagResponse, error) {
	l := logic.NewFoundTagLogic(ctx, s.svcCtx)
	return l.FoundTag(in)
}
